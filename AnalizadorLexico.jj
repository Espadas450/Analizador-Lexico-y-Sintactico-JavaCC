PARSER_BEGIN (AnalizadorLexico)

class AnalizadorLexico
{
	public static void main ( String[] args ) throws ParseException
	{
		try{
		
			AnalizadorLexico Analizador = new AnalizadorLexico (System.in) ;
			
			Analizador.Iniciar() ;
		}
		catch (ParseException e){
		
			System.out.println(e.getMessage()) ;
		}
	}
}

PARSER_END (AnalizadorLexico)

SKIP:{
    " " | "\t" | "\n" | "\r"
}

TOKEN:{
	< #Letra: ["a"-"z","A"-"Z"]> | 
	< #Numero: ["0" - "9"]> |
    < #Arroba: ["@"]>
}

TOKEN:{
    <	Numeros: (<Numero>)+	>{
		System.out.println("Se ingreso un numero: " + image);
	}
    |
	<	Decimal: (<Numero>)+ (["."]) (<Numero>)+ >{
		System.out.println("Se ingreso un numero decimal: " + image);
	}
    |
    <   Protocolo: (<Letra>)+ (["s"])* ([":"]) (["/"]) (["/"]) >
    |
	  <   Subdominio: (<Letra>)+ (["."])	>
    |
	  <	  Extension: (["."]) (<Letra>)+ (["."])* ((<Letra>)+)*>
}

TOKEN:{
        <   Dominio: (<Letra>)+ (<Extension>) > 
}

// Expresiones Regulares Finales!
TOKEN:{
    <	Variables: (<Letra>) (<Numero> | <Letra>)*	>{
		    System.out.println("Se ingreso una variable: " + image);
	    } 
    |
    <   URL: (<Protocolo>) (<Subdominio>) (<Dominio>)>{
            System.out.println("Se ingreso un URL: " + image);
        }
    |
    <   CorreoElec: (<Letra>) (<Letra> | "_" | "." | "-" | <Numeros>)* (<Arroba>) (<Dominio>) >{
            System.out.println("Se ingreso un correo: " + image);
    }
}

void Iniciar():
{}

{
    (<Numeros>| <Variables> | <Decimal> | <URL> | <CorreoElec>)* <EOF>
}