PARSER_BEGIN(comp)
import java.util.*;
class comp
{
	public static void main( String[] args )throws ParseException
	{
		try
		{		
     		comp Checker = new comp( System.in ) ;
			Checker.Program();
			System.out.println("\tHabemus analizado todo.");			
		}
		catch(ParseException e)
		{
			System.err.print(e.getMessage());
			System.out.println("\tChecker ha terminado.");
		}
		catch(TokenMgrError e)
		{
			System.err.print(e.getMessage());
			System.out.println("\tChecker ha terminado.");
		}
	}
}
PARSER_END(comp)

<*> SKIP: {
<	" " | "\t" | "\r" | "\n" | "\r\n"	> 		//White space
}

/* || ========== || [ INICIA SINTACTICO ] || ========== || */

/* Comentario*/
TOKEN:{
	<	ComentC: (["/"]) (["/"])	>
	|
	<	ComentSQLInicio: (["/"]) (["*"])	>
	|
	<	ComentSQLFin: (["*"]) (["/"])	>
	|
	<	ComentHTML: (["!"]) (["-"]) (["-"]) >
	|
	<	ComentPy: ["#"]	>
}

TOKEN:{
	<	Comentario:
	<ComentC>
	|
	<ComentSQLInicio>
	|
	<ComentPy>
	|
	<ComentSQLFin>	>
}

/* Pregunta*/
TOKEN:{
	<	Pregunta: (["i"]|["I"]) (["f"]|["F"])	>
}

/* Entonces*/
TOKEN:{
	<	Entonces: (["t"]|["T"]) (["h"]|["H"]) (["e"]|["E"]) (["n"]|["N"])	>
}

/* ParenIzq*/
TOKEN:{
	<	ParenIzq: ["("]	>
}

/* ParenDer*/
TOKEN:{
	<	ParenDer: [")"]	>
}

/* CorIzq*/
TOKEN:{
	<	CorIzq: ["["]	>
}

/* CorDer*/
TOKEN:{
	<	CorDer: ["]"]	>
}

/* Comillas*/
TOKEN:{ 
	<	#Comilla: ["\""]	>
	|
	<	#Apost: ["'"]	>
}

TOKEN:{
	<	Comillas: 
	<	Comilla	> 
	| 
	<	Apost>	>
}

/* TipoDato*/
TOKEN:{
	<	#Char: (["c"]|["C"]) (["h"]|["H"]) (["a"]|["A"]) (["r"]|["R"])	>
	|
	<	#Nchar: (["n"]|["N"]) (["c"]|["C"]) (["h"]|["H"]) (["a"]|["A"]) (["r"]|["R"])	>
	|
	<	#String: (["s"]|["S"]) (["t"]) (["r"]) (["i"]) (["n"]) (["g"])	>
	|
	<	#Varchar: (["v"]|["V"]) (["a"]|["A"]) (["r"]|["R"]) (["c"]|["C"]) (["h"]|["H"]) (["a"]|["A"]) (["r"]|["R"])	>
	|
	<	#Var: (["v"]|["V"]) (["a"]|["A"]) (["r"]|["R"])	>
	|
	<	#DATE: (["d"]|["D"]) (["a"]|["A"]) (["t"]|["T"]) (["e"]|["E"])	>
	|
	<	#DATETIME: (["d"]|["D"]) (["a"]|["A"]) (["t"]|["T"]) (["e"]|["E"]) (["t"]|["T"]) (["i"]|["I"]) (["m"]|["M"]) (["e"]|["E"])	>
	|
	<	#Numeric: (["n"]|["N"]) (["u"]|["U"]) (["m"]|["M"]) (["e"]|["E"]) (["r"]|["R"]) (["i"]|["I"]) (["c"]|["C"])	>
	|
	<	#NVARCHAR: (["n"]|["N"]) (["v"]|["V"]) (["a"]|["A"]) (["r"]|["R"]) (["c"]|["C"]) (["h"]|["H"]) (["a"]|["A"]) (["r"]|["R"])	>
	|
	<	#Bit: (["b"]|["B"]) (["i"]|["I"]) (["t"]|["T"])	>
	|
	<	#Bool: (["b"]) (["o"]) (["o"]) (["l"])	>
	|
	<	#Money: (["m"]|["M"]) (["o"]|["O"]) (["n"]|["N"]) (["e"]|["E"]) (["y"]|["Y"])	>
	|
	<	#Str: (["S"]) (["t"]) (["r"])	>
}

/* TipoDatoNumerico*/
TOKEN:{	
	<	#Int: (["i"]|["I"]) (["n"]|["N"]) (["t"]|["T"])	>
	|
	<	#Float: (["f"]|["F"]) (["l"]|["L"]) (["o"]|["O"]) (["a"]|["A"]) (["t"]|["T"])	>
	|
	<	#Double: (["d"]|["D"]) (["o"]|["O"]) (["u"]|["U"]) (["b"]|["B"]) (["l"]|["L"]) (["e"]|["E"])	>
	|
	<	#Byte: (["b"]) (["y"]) (["t"]) (["e"])	>
	|
	<	#Long: (["l"]) (["o"]) (["n"]) (["g"])	>
	|
	<	#Short: (["s"]) (["h"]) (["o"]) (["r"]) (["t"])	>
	|
	<	#Ulong: (["u"]) (["l"]) (["o"]) (["n"]) (["g"])	>
	|
	<	#UINT: (["u"]) (["i"]) (["n"]) (["t"])	>
	|
	<	#Sbyte: (["s"]) (["b"]) (["y"]) (["t"]) (["e"])	>
	|
	<	#Ushort: (["u"]) (["s"]) (["h"]) (["o"]) (["r"]) (["t"])	>
}

TOKEN:{
	<	TipoDatoNumerico:
	<Int>
	|
	<Float>
	|
	<Double>
	|
	<Byte>
	|
	<Long>
	|
	<Short>
	|
	<Ulong>
	|
	<UINT>
	|
	<Sbyte>
	|
	<Ushort>	>
}

TOKEN:{
	<	TipoDatoNoNumerico: 
	<Char>
	| 
	<String> 
	| 
	<Var> 
	|   
	<Nchar> 
	| 
	<Varchar>
	| 
	<DATE>
	| 
	<DATETIME>
	| 
	<Numeric>
	| 
	<NVARCHAR>
	| 
	<Bit>
	|
	<Bool>
	|
	<Money>
	|
	<Str>	>
}

/* LlaveIzq*/
TOKEN:{
	<	LlaveIzq: ["{"]	>
}

/* LlaveDer*/
TOKEN:{
	<	LlaveDer: ["}"]	>
}

/* Puntuacion*/
TOKEN:{
	<	PuntoYComa: [";"]	>
	|
	<	Gbajo: ["_"]	>
	|
	<	Coma: [","]	>
}

TOKEN:{
	<	Puntuacion:
	<PuntoYComa>
	|
	<Gbajo>
	|
	<Coma>	>
}

/* Comparador*/
TOKEN:{
	<	#IgualIgual: (["="]) (["="])	>
	|
	<	MenorQue: ["<"]	>
	|
	<	MayorQue: [">"]	>
	|
	<	#DiferenteDe: (["!"]) (["="])	>
	|
	<	#MenorIgual: (["<"]) (["="])	>
	|
	<	#MayorIgual: ([">"]) (["="])	>
}

TOKEN:{
    <   Comparador: 
	<IgualIgual> 
	| 
	<MenorQue> 
	| 
	<MayorQue> 
	| 
	<DiferenteDe> 
	| 
	<MenorIgual> 
	| 
	<MayorIgual>  >
}

/* AccesoMiembro*/
TOKEN:{
	<	AccesoMiembro: ["."]	>
}

/* In*/
TOKEN:{
	<	In: "in"	>
}

/* Clase*/
TOKEN:{
	<	Clase: "class"	>
}

/* Sustitución*/
TOKEN:{
	<	#Arroba: ["@"]	>
	|
	<	#SignoDinero: ["$"]	>
}

TOKEN:{
	<	Sustitucion:
	<Arroba>
	|
	<SignoDinero>	>
}

/* TipoAcceso*/
TOKEN:{
	<	#Public: (["p"]|["P"]) (["u"]|["U"]) (["b"]|["B"]) (["l"]|["L"]) (["i"]|["I"]) (["c"]|["C"])	>
	|
	<	Protected: (["p"]|["P"]) (["r"]|["R"]) (["o"]|["O"]) (["t"]|["T"]) (["e"]|["E"]) (["c"]|["C"]) (["t"]|["T"]) (["e"]|["E"]) (["d"]|["D"])	>
	|
	<	#Private: (["p"]|["P"]) (["r"]|["R"]) (["i"]|["I"]) (["v"]|["V"]) (["a"]|["A"]) (["t"]|["T"]) (["e"]|["E"])	>
	|
	<	Internal: (["i"]) (["n"]) (["t"]) (["e"]) (["r"]) (["n"]) (["a"]) (["l"])	>
}

TOKEN:{
	<	TipoAcceso: 
	<Public>
	|
	<Protected>
	|
	<Private>
	|
	<Internal>	>
}

/* Ciclo*/
TOKEN:{
	<	Do: (["d"]) (["o"])	>
	|
	<	For: (["f"]|["F"]) (["o"]|["O"]) (["r"]|["R"])	>
	|
	<	Foreach: (["f"]) (["o"]) (["r"]) (["e"]) (["a"]) (["c"]) (["h"])	>
	|
	<	While: (["w"]|["W"]) (["h"]|["H"]) (["i"]|["I"]) (["l"]|["L"]) (["e"]|["E"])	>
}

TOKEN:{
	<	#Ciclo:
	<Do>
	|
	<For>
	|
	<Foreach>
	|
	<While>	>
}

/* SelectivaMultiple*/
TOKEN:{
	<	SelectivaMultiple: (["s"]) (["w"]) (["i"]) (["t"]) (["c"]) (["h"])	>
}

/* Default*/
TOKEN:{
	<	#Else: (["e"]|["E"]) (["l"]|["L"]) (["s"]|["S"]) (["e"]|["E"])	>
	|
	<	#Finally: (["f"]) (["i"]) (["n"]) (["a"]) (["l"]) (["l"]) (["y"])	>
	|
	<	Default: (["d"]|["D"]) (["e"]|["E"]) (["f"]|["F"]) (["a"]|["A"]) (["u"]|["U"]) (["l"]|["L"]) (["t"]|["T"])	>
}

TOKEN:{
	<	#Defecto:
	<Else>
	|
	<Finally>
	|
	<Default>	>
}

/* Asignar*/
TOKEN:{
	<	Asignar: ["="]	>
}

/* Case*/
TOKEN:{
	<	Case: (["c"]|["C"]) (["a"]|["A"]) (["s"]|["S"]) (["e"]|["E"])	>
}

/* Método*/
TOKEN:{
	<	Metodo: (["v"]) (["o"]) (["i"]) (["d"])	>
}

/* ClaseConsole*/
TOKEN:{
	<	#ClaseConsole: (["C"]) (["o"]) (["n"]) (["s"]) (["o"]) (["l"]) (["e"])	>
}

/* Sobrecargar*/
TOKEN:{
	<	#Sobrecargar: (["o"]) (["v"]) (["e"]) (["r"]) (["r"]) (["i"]) (["d"]) (["e"])	>
}

/* FuncionString*/
TOKEN:{
	<	#Concat: (["c"]|["C"]) (["o"]|["O"]) (["n"]|["N"]) (["c"]|["C"]) (["a"]|["A"]) (["t"]|["T"])	>
	|
	<	#Concat_Ws: (["c"]|["C"]) (["o"]|["O"]) (["n"]|["N"]) (["c"]|["C"]) (["a"]|["A"]) (["t"]|["T"]) (["_"]) (["w"]|["W"]) (["s"]|["S"])>
	|
	<	#Length: (["L"]) (["e"]) (["n"]) (["g"]) (["t"]) (["h"])	>
	|
	<	#Write: (["W"]|["w"]) (["r"]) (["i"]) (["t"]) (["e"])	>
	|
	<	#WriteLine: (["W"]) (["r"]) (["i"]) (["t"]) (["e"]) (["L"]) (["i"]) (["n"]) (["e"])	>
	|
	<	#Read: (["R"]) (["e"]) (["a"]) (["d"])	>
	|
	<	#ReadLine: (["R"]) (["e"]) (["a"]) (["d"]) (["L"]) (["i"]) (["n"]) (["e"])	>
	|
	<	#ReadKey: (["R"]) (["e"]) (["a"]) (["d"]) (["K"]) (["e"]) (["y"])	>
	|
	<	#Ascii: (["a"]|["A"]) (["s"]|["S"]) (["c"]|["C"]) (["i"]|["I"]) (["i"]|["I"])	>
	|
	<	#Clear: (["C"]) (["l"]) (["e"]) (["a"]) (["r"])	>
	|
	<	#Delete: (["D"]) (["e"]) (["l"]) (["e"]) (["t"]) (["e"])	>
	|
	<	Include: (["I"]) (["n"]) (["c"]) (["l"]) (["u"]) (["d"]) (["e"])	>
	|
	<	#Substring: (["s"]|["S"]) (["u"]|["U"]) (["b"]|["B"]) (["s"]|["S"]) (["t"]|["T"]) (["r"]|["R"]) (["i"]|["I"]) (["n"]|["N"]) (["g"]|["G"])	>
	|
	<	#ToChar: (["T"]) (["o"]) (["C"]) (["h"]) (["a"]) (["r"])	>
	|
	<	#Upper: (["u"]|["U"]) (["p"]|["P"]) (["p"]|["P"]) (["e"]|["E"]) (["r"]|["R"])	>
	|
	<	#ToUpper: (["T"]) (["o"]) (["U"]) (["p"]) (["p"]) (["e"]) (["r"])	>
	|
	<	#Lower: (["l"]|["L"]) (["o"]|["O"]) (["w"]|["W"]) (["e"]|["E"]) (["r"]|["R"])	>
	|
	<	#ToLower: (["T"]) (["o"]) (["L"]) (["o"]) (["w"]) (["e"]) (["r"])	>
	|
	<	#ToString: (["T"]) (["o"]) (["S"]) (["t"]) (["r"]) (["i"]) (["n"]) (["g"])	>
	|
	<	#Next: (["N"]) (["e"]) (["x"]) (["t"])	>
	|
	<	#Replace: (["r"]|["R"]) (["e"]|["E"]) (["p"]|["P"]) (["l"]|["L"]) (["a"]|["A"]) (["c"]|["C"]) (["e"]|["E"])	>
	|
	<	#Len: (["l"]|["L"]) (["e"]|["E"]) (["n"]|["N"])	>
	|
	<	#Imprimir: (["p"]) (["r"]) (["i"]) (["n"]) (["t"]) 	>
	|
	<	#Reverse: (["r"]|["R"]) (["e"]|["E"]) (["v"]|["V"]) (["e"]|["E"]) (["r"]|["R"]) (["s"]|["S"]) (["e"]|["E"])	>
	|
	<	As: (["A"]|["a"]) (["S"]|["s"]) 	>
	|
	<	#EchoPhp: (["e"]) (["c"]) (["h"]) (["o"]) 	>
	|
	<	#Format: (["f"]|["F"]) (["o"]|["O"]) (["r"]|["R"]) (["m"]|["M"]) (["a"]|["A"]) (["t"]|["T"])	>
}

TOKEN:{
	<	FuncionString:
	<Concat>
	|
	<As>
	|
	<EchoPhp>
	|
	<Concat_Ws>
	|
	<Length>
	|
	<Imprimir>
	|
	<Write>
	|
	<WriteLine>
	|
	<Read>
	|
	<ReadLine>
	|
	<ReadKey>
	|
	<Parse>
	|
	<Ascii>
	|
	<Clear>
	|
	<Delete>
	|
	<Include>
	|
	<Substring>
	|
	<ToChar>
	|
	<Upper>
	|
	<ToUpper>
	|
	<Lower>
	|
	<ToLower>
	|
	<ToString>
	|
	<Next>
	|
	<Replace>
	|
	<Len>
	|
	<Reverse>
	|
	<Format>	>
}

/* FuncionAgregar*/
TOKEN:{
	<	#AVG: (["a"]|["A"]) (["v"]|["V"]) (["g"]|["G"])	>
	|
	<	#Count: (["c"]|["C"]) (["o"]|["O"]) (["u"]|["U"]) (["n"]|["N"]) (["t"]|["T"])>
	|
	<	#Max: (["m"]|["M"]) (["a"]|["A"]) (["x"]|["X"])>
	|
	<	#Min: (["m"]|["M"]) (["i"]|["I"]) (["n"]|["N"])>
	|
	<	#Sum: (["s"]|["S"]) (["u"]|["U"]) (["m"]|["M"])>
}

TOKEN:{
	<	FuncionAgregar:
	<AVG>
	|
	<Count>
	|
	<Max>
	|
	<Min>
	|
	<Sum>	>
}

/* FuncionDate*/
TOKEN:{
	<	#DateDiff: (["d"]|["D"]) (["a"]|["A"]) (["t"]|["T"]) (["e"]|["E"]) (["d"]|["D"]) (["i"]|["I"]) (["f"]|["F"]) (["f"]|["F"])	>
	|
	<	#DateAdd: (["d"]|["D"]) (["a"]|["A"]) (["t"]|["T"]) (["e"]|["E"]) (["a"]|["A"]) (["d"]|["D"]) (["d"]|["D"])	>
	|
	<	#DateName: (["d"]|["D"]) (["a"]|["A"]) (["t"]|["T"]) (["e"]|["E"]) (["n"]|["N"]) (["a"]|["A"]) (["m"]|["M"]) (["e"]|["E"])>
	|
	<	#Day: (["d"]|["D"]) (["a"]|["A"]) (["y"]|["Y"])	>
	|
	<	#GetDate: (["g"]|["G"]) (["e"]|["E"]) (["t"]|["T"]) (["d"]|["D"]) (["a"]|["A"]) (["t"]|["T"]) (["e"]|["E"])	>
	|
	<	#Month: (["m"]|["M"]) (["o"]|["O"]) (["n"]|["N"]) (["t"]|["T"]) (["h"]|["H"])	>
	|
	<	#Year: (["y"]|["Y"]) (["e"]|["E"]) (["a"]|["A"]) (["r"]|["R"])	>
}

TOKEN:{
	<	FuncionDate:
	<DateDiff>
	|
	<DateAdd>
	|
	<DateName>
	|
	<Day>
	|
	<GetDate>
	|
	<Month>
	|
	<Year>	>
}

/* FuncionMath*/
TOKEN:{
	<	#Abs: (["a"]|["A"]) (["b"]|["B"]) (["s"]|["S"])	>
	|
	<	#Acos: (["a"]|["A"]) (["c"]|["C"]) (["o"]|["O"]) (["s"]|["S"])	>
	|
	<	#Asin: (["a"]|["A"]) (["s"]|["S"]) (["i"]|["I"]) (["n"]|["N"])	>
	|
	<	#Atan: (["a"]|["A"]) (["t"]|["T"]) (["a"]|["A"]) (["n"]|["N"])	>
	|
	<	#Cos: (["c"]|["C"]) (["o"]|["O"]) (["s"]|["S"])	>
	|
	<	#Cot: (["c"]|["C"]) (["o"]|["O"]) (["t"]|["T"])	>
	|
	<	#Floor: (["f"]|["F"]) (["l"]|["L"]) (["o"]|["O"]) (["o"]|["O"]) (["r"]|["R"])	>
	|
	<	#Log: (["l"]|["L"]) (["o"]|["O"]) (["g"]|["G"])	>
	|
	<	#LogDiez: (["l"]|["L"]) (["o"]|["O"]) (["g"]|["G"]) (["1"]) (["0"])	>
	|
	<	#Pi: (["p"]|["P"]) (["i"]|["I"])	>
	|
	<	#Power: (["p"]|["P"]) (["o"]|["O"]) (["w"]|["W"]) (["e"]|["E"]) (["r"]|["R"])	>
	|
	<	#Radians: (["r"]|["R"]) (["a"]|["A"]) (["d"]|["D"]) (["i"]|["I"]) (["a"]|["A"]) (["n"]|["N"]) (["s"]|["S"])	>
	|
	<	#Round: (["r"]|["R"]) (["o"]|["O"]) (["u"]|["U"]) (["n"]|["N"]) (["d"]|["D"])	>
	|
	<	#Sin: (["s"]|["S"]) (["i"]|["I"]) (["n"]|["N"])	>
	|
	<	#Sqrt: (["s"]|["S"]) (["q"]|["Q"]) (["r"]|["R"]) (["t"]|["T"])	>
	|
	<	#Square: (["s"]|["S"]) (["q"]|["Q"]) (["u"]|["U"]) (["a"]|["A"]) (["r"]|["R"]) (["e"]|["E"])	>
	|
	<	#Tan: (["t"]|["T"]) (["a"]|["A"]) (["n"]|["N"])	>
}

TOKEN:{
	<	FuncionMath:
	<Abs>
	|
	<Acos>
	|
	<Asin>
	|
	<Atan>
	|
	<Cos>
	|
	<Cot>
	|
	<Floor>
	|
	<Log>
	|
	<LogDiez>
	|
	<Pi>
	|
	<Power>
	|
	<Radians>
	|
	<Round>
	|
	<Sin>
	|
	<Sqrt>
	|
	<Square>
	|
	<Tan>	>
}

/* FuncionConvert*/
TOKEN:{
	<	#Parse: (["p"]|["P"]) (["a"]|["A"]) (["r"]|["R"]) (["s"]|["S"]) (["e"]|["E"])	>
	|
	<	#Try_Cast: (["t"]|["T"]) (["r"]|["R"]) (["y"]|["Y"]) (["_"]) (["c"]|["C"]) (["a"]|["A"]) (["s"]|["S"]) (["t"]|["T"])	>
	|
	<	#Try_Convert: (["t"]|["T"]) (["r"]|["R"]) (["y"]|["Y"]) (["_"]) (["c"]|["C"]) (["o"]|["O"]) (["n"]|["N"]) (["v"]|["V"]) (["e"]|["E"]) (["r"]|["R"]) (["t"]|["T"])	>
	|
	<	#Try_Parse: (["t"]|["T"]) (["r"]|["R"]) (["y"]|["Y"]) (["_"]) (["p"]|["P"]) (["a"]|["A"]) (["r"]|["R"]) (["s"]|["S"]) (["e"]|["E"])	>
}

TOKEN:{
	<	#FuncionConvert:
	<Parse>
	|
	<Try_Cast>
	|
	<Try_Convert>
	|
	<Try_Parse>	>
}

/* FuncionLogica*/
TOKEN:{
	<	#Choose: (["c"]|["C"]) (["h"]|["H"]) (["o"]|["O"]) (["o"]|["O"]) (["s"]|["S"]) (["e"]|["E"])	>
	|
	<	#Greatest: (["g"]|["G"]) (["r"]|["R"]) (["e"]|["E"]) (["a"]|["A"]) (["t"]|["T"]) (["e"]|["E"]) (["s"]|["S"]) (["t"]|["T"])	>
	|
	<	#Iif: (["i"]|["I"]) (["i"]|["I"]) (["f"]|["F"])	>
	|
	<	#Least: (["l"]|["L"]) (["e"]|["E"]) (["a"]|["A"]) (["s"]|["S"]) (["t"]|["T"])	>
}

TOKEN:{
	<	#FuncionLogica:
	<Choose>
	|
	<Greatest>
	|
	<Iif>
	|
	<Least>	>
}

/* FuncionAnalitic*/
TOKEN:{
	<	#First_Value: (["f"]|["F"]) (["i"]|["I"]) (["r"]|["R"]) (["s"]|["S"]) (["t"]|["T"]) (["_"]) (["v"]|["V"]) (["a"]|["A"]) (["l"]|["L"]) (["u"]|["U"]) (["e"]|["E"])	>
	|
	<	#Last_Value: (["l"]|["L"]) (["a"]|["A"]) (["s"]|["S"]) (["t"]|["T"]) (["_"]) (["v"]|["V"]) (["a"]|["A"]) (["l"]|["L"]) (["u"]|["U"]) (["e"]|["E"])	>
	|
	<	#Lag: (["l"]|["L"]) (["a"]|["A"]) (["g"]|["G"])	>
	|
	<	#Lead: (["l"]|["L"]) (["e"]|["E"]) (["a"]|["A"]) (["d"]|["D"])	>
}

TOKEN:{
	<	#FuncionAnalitic:
	<First_Value>
	|
	<Last_Value>
	|
	<Lag>
	|
	<Lead>	>
}


/* Estructura*/
TOKEN:{
	<	#Estructura: (["s"]) (["t"]) (["r"]) (["u"]) (["c"]) (["t"])	>
}

/* CapExcepcion*/
TOKEN:{
	<	CapExcepcion: (["c"]) (["a"]) (["t"]) (["c"]) (["h"])	>
}

/* Namespace*/
TOKEN:{
	<	#Namespace: (["S"]) (["y"]) (["s"]) (["t"]) (["e"]) (["m"])	>
}

/* Intenta*/
TOKEN:{
	<	Intenta: (["t"]|["T"]) (["r"]|["R"]) (["y"]|["Y"])	>
}

/* Romper*/
TOKEN:{
	<	Romper: (["b"]) (["r"]) (["e"]) (["a"]) (["k"])	>
}

/* Base*/
TOKEN:{
	<	#Base: (["b"]) (["a"]) (["s"]) (["e"])	>
}

/* Propiedad*/
TOKEN:{
	<	#Checked: (["C"]) (["h"]) (["e"]) (["c"]) (["k"]) (["e"]) (["d"])	>
	|
	<	#BackColor: (["B"]) (["a"]) (["c"]) (["k"]) (["C"]) (["o"]) (["l"]) (["o"]) (["r"])	>
	|
	<	#Font: (["F"]) (["o"]) (["n"]) (["d"])	>
	|
	<	#Text: (["T"]) (["e"]) (["x"]) (["t"])	>
	|
	<	#Enabled: (["E"]) (["n"]) (["a"]) (["b"]) (["l"]) (["e"]) (["d"])	>
	|
	<	#TextAling: (["T"]) (["e"]) (["x"]) (["t"]) (["A"]) (["l"]) (["i"]) (["g"]) (["n"])	>
	|
	<	#ReadOnly: (["R"]) (["e"]) (["a"]) (["d"]) (["O"]) (["n"]) (["l"]) (["y"])	>
	|
	<	#Cursor: (["C"]) (["u"]) (["r"]) (["s"]) (["o"]) (["r"])	>
	|
	<	#TabIndex: (["T"]) (["a"]) (["b"]) (["I"]) (["n"]) (["d"]) (["e"]) (["x"])>
	|
	<	#Visible: (["V"]) (["i"]) (["s"]) (["i"]) (["b"]) (["l"]) (["e"])	>
	|
	<	#Locked: (["L"]) (["o"]) (["c"]) (["k"]) (["e"]) (["d"])	>
	|
	<	#Size: (["S"]) (["i"]) (["z"]) (["e"])	>
	|
	<	#Opacity: (["O"]) (["p"]) (["a"]) (["c"]) (["i"]) (["t"]) (["y"])	>
	|
	<	#Icon: (["I"]) (["c"]) (["o"]) (["n"])	>
	|
	<	#AcceptButton: 	(["A"]) (["c"]) (["c"]) (["e"]) (["p"]) (["t"]) (["B"]) (["u"]) (["t"]) (["t"]) (["o"]) (["n"])	>
	|
	<	#CancelButton: (["C"]) (["a"]) (["n"]) (["c"]) (["e"]) (["l"]) (["B"]) (["u"]) (["t"]) (["t"]) (["o"]) (["n"])	>
	|
	<	#DialogResult: (["D"]) (["i"]) (["a"]) (["l"]) (["o"]) (["g"]) (["R"]) (["e"]) (["s"]) (["u"]) (["l"]) (["t"])	>
}
TOKEN:{
	<	#Lang: (["l"]) (["a"]) (["n"]) (["g"])	>
	|
	<	#Charset: (["c"]) (["h"]) (["a"]) (["r"]) (["s"]) (["e"]) (["t"])	>
	|
	<	#Name: (["n"]) (["a"]) (["m"]) (["e"])	>
	|
	<	#Content: (["c"]) (["o"]) (["n"]) (["t"]) (["e"]) (["n"]) (["t"])	>
	|
	<	#Rel: (["r"]) (["e"]) (["l"])	>
	|
	<	#Href: (["h"]) (["r"]) (["e"]) (["f"])	>
}

TOKEN:{
	<	#AtributosEtiqueta:
	<Lang>
	|
	<Charset>
	|
	<Name>
	|
	<Content>
	|
	<Rel>
	|
	<Href>	>
}
TOKEN:{
	<	#Propiedad:
	<Checked>
	|
	<BackColor>
	|
	<Font>
	|
	<Text>
	|
	<Enabled>
	|
	<TextAling>
	|
	<ReadOnly>
	|
	<Cursor>
	|
	<TabIndex>
	|
	<Visible>
	|
	<Locked>
	|
	<Size>
	|
	<Opacity>
	|
	<Icon>
	|
	<AcceptButton>
	|
	<CancelButton>
	|
	<DialogResult>	>
}

/* ResultadoLogico*/
TOKEN:{
	<	#True: (["t"]|["T"]) (["r"]|["R"]) (["u"]|["U"]) (["e"]|["E"])	>
	|
	<	#False: (["f"]|["F"]) (["a"]|["A"]) (["l"]|["L"]) (["s"]|["S"]) (["e"]|["E"])	>
}

TOKEN:{
	<	#ResultadoLogico:
	<True>
	|
	<False>	>
}

/* Lista*/
TOKEN:{
	<	#List: (["L"]) (["i"]) (["s"]) (["t"])	>
	|
	<	#Stack: (["S"]) (["t"]) (["a"]) (["c"]) (["k"])	>
	|
	<	#Queue: (["Q"]) (["u"]) (["e"]) (["u"]) (["e"])	>
}

TOKEN:{
	<	#Lista:
	<List>
	|
	<Stack>
	|
	<Queue>	>
}

/* Retorno*/
TOKEN:{
	<	Retorno: (["r"]|["R"]) (["e"]|["E"]) (["t"]|["T"]) (["u"]|["U"]) (["r"]|["R"]) (["n"]|["N"]) (["s"]|["S"])?	>
}

/* Libreria*/
TOKEN:{
	<	#Libreria: (["u"]|["U"]) (["s"]|["S"]) (["i"]|["I"]) (["n"]|["N"]) (["g"]|["G"])	>
}

/* TipoLibreria*/
TOKEN:{
	<	#Colletions: (["C"]) (["o"]) (["l"]) (["l"]) (["e"]) (["c"]) (["t"]) (["i"]) (["o"]) (["n"]) (["s"])	>
	|
	<	#Dynamic: (["D"]) (["y"]) (["n"]) (["a"]) (["m"]) (["i"]) (["c"])	>
	|
	<	#IO: (["I"]) (["O"])	>
	|
	<	#Linq: (["L"]) (["i"]) (["n"]) (["q"])	>
	|
	<	#Resources: (["R"]) (["e"]) (["s"]) (["o"]) (["u"]) (["r"]) (["c"]) (["e"]) (["s"])	>
	|
	<	#Security: (["S"]) (["e"]) (["c"]) (["u"]) (["r"]) (["i"]) (["t"]) (["y"])	>
	|
	<	#Threading: (["T"]) (["h"]) (["r"]) (["e"]) (["a"]) (["d"]) (["i"]) (["n"]) (["g"])	>
	|
	<	#Diagnostic: (["D"]) (["i"]) (["a"]) (["g"]) (["n"]) (["o"]) (["s"]) (["t"]) (["i"]) (["c"])	>
	|
	<	#Drawing: (["D"]) (["r"]) (["a"]) (["w"]) (["i"]) (["n"]) (["g"])	>
}

TOKEN:{
	<	#TipoLibreria:
	<Colletions>
	|
	<Dynamic>
	|
	<IO>
	|
	<Linq>
	|
	<Text>
	|
	<Resources>
	|
	<Security>
	|
	<Threading>
	|
	<Diagnostic>
	|
	<Drawing>	>
}
/* Nulo*/
TOKEN:{
	<	#Nulo: (["n"]|["N"]) (["u"]|["U"]) (["l"]|["L"]) (["l"]|["L"])	>
}

/* Not*/
TOKEN:{
	<	#Not: (["n"]|["N"]) (["o"]|["O"]) (["t"]|["T"])	 >
}
/* Like*/
TOKEN:{
	<	#Like: (["l"]|["L"]) (["i"]|["I"]) (["k"]|["K"]) (["e"]|["E"])  	>
}

/* OperadorNew*/
TOKEN:{
	<	#OperadorNew: (["n"]) (["e"]) (["w"])	>
}


/* OpAritmetico*/
TOKEN:{
	<	#Mas: ["+"]	>
	|
	<	#Menos: ["-"]	>
}

TOKEN:{
	<	OpAritmetico:
	<Mas>
	|
	<Menos>	>
}

/* OpAritmeticoUnitario*/
TOKEN:{
	<	#Incremento: (["+"]) (["+"])	>
	|
	<	#Decremento: (["-"]) (["-"])	>
}

TOKEN:{
	<	OpAritmeticoUnitario:
	<Incremento>
	|
	<Decremento>	>
}

/* OpAritmeticoBinario*/
TOKEN:{
	<	Multiplicacion: ["*"]	>
	|
	<	#Divison: ["/"]	>
	|
	<	#Modulo: ["%"]	>
}

TOKEN:{
	<	OpAritmeticoBinario:
	<Multiplicacion>
	|
	<Divison>
	|
	<Modulo>	>
}

/* OpLogicoBoolUnitario*/
TOKEN:{
	<	OpLogicoBoolUnitario: ["!"]	>
}

/* OpLogicoBoolBinario*/
TOKEN:{
	<	OrLogico: ["|"]	>
	|
	<	#AndLogico: ["&"]	>
	|
	<	#ExclusivoOrLogico: ["^"]	>
	|
	<	#AND: (["a"]|["A"]) (["n"]|["N"]) (["d"]|["D"])	>
	|
	<	#OR: (["o"]|["O"]) (["r"]|["R"])	>	
}

TOKEN:{
	<	OpLogicoBoolBinario:
	<OrLogico>
	|
	<AndLogico>
	|
	<ExclusivoOrLogico>
	|
	<AND>
	|
	<OR>	>
}

/* OpLogicoBoolBinarioCondicional*/
TOKEN:{
	<	#AndCondicional: (["&"]) (["&"])	>
	|
	<	#OrCondicional: (["|"]) (["|"])	>
}

TOKEN:{
	<	OpLogicoBoolBinarioCondicional:
	<AndCondicional>
	|
	<OrCondicional>	>
}

/* Consulta*/
TOKEN:{
	<	Select: (["s"]|["S"]) (["e"]|["E"]) (["l"]|["L"]) (["e"]|["E"]) (["c"]|["C"]) (["t"]|["T"])	>
	|
	<	From: (["f"]|["F"]) (["r"]|["R"]) (["o"]|["O"]) (["m"]|["M"])	>
	|
	<	#Where: (["w"]|["W"]) (["h"]|["H"]) (["e"]|["E"]) (["r"]|["R"]) (["e"]|["E"])	>
}

TOKEN:{
	<	Consulta:
	<Select>
	|
	<From>
	|
	<Where>	>
}

/* TipoSelect*/
TOKEN:{
	<	#GroupBy: (["g"]|["G"]) (["r"]|["R"]) (["o"]|["O"]) (["u"]|["U"]) (["p"]|["P"]) ([" "]) (["b"]|["B"]) (["y"]|["Y"])	>
	|
	<	#Having: (["h"]|["H"]) (["a"]|["A"]) (["v"]|["V"]) (["i"]|["I"]) (["n"]|["N"]) (["g"]|["G"])	>
	|
	<	#OrderBy: (["o"]|["O"]) (["r"]|["R"]) (["d"]|["D"]) (["e"]|["E"]) (["r"]|["R"]) ([" "]) (["b"]|["B"]) (["y"]|["Y"])	>
	|
	<	#Over: (["o"]|["O"]) (["v"]|["V"]) (["e"]|["E"]) (["r"]|["R"])	>
}

TOKEN:{
	<	#TipoSelect:
	<GroupBy>
	|
	<Having>
	|
	<OrderBy>
	|
	<Over>	>
}

/* TipoFrom*/
TOKEN:{
	<	#Inner: (["i"]|["I"]) (["n"]|["N"]) (["n"]|["N"]) (["e"]|["E"]) (["r"]|["R"])	>
	|
	<	#Join: (["j"]|["J"]) (["o"]|["O"]) (["i"]|["I"]) (["n"]|["N"])	>
	|
	<	#Left: (["l"]|["L"]) (["e"]|["E"]) (["f"]|["F"]) (["t"]|["T"])	>
	|
	<	#Outer: (["o"]|["O"]) (["u"]|["U"]) (["t"]|["T"]) (["e"]|["E"]) (["r"]|["R"])	>
	|
	<	#Right: (["r"]|["R"]) (["i"]|["I"]) (["g"]|["G"]) (["h"]|["H"]) (["t"]|["T"])	>
	|
	<	#Full: (["f"]|["F"]) (["u"]|["U"]) (["l"]|["L"]) (["l"]|["L"])	>
	|
	<	#Cross: (["c"]|["C"]) (["r"]|["R"]) (["o"]|["O"]) (["s"]|["S"]) (["s"]|["S"])	>
	|
	<	#Apply: (["a"]|["A"]) (["p"]|["P"]) (["p"]|["P"]) (["l"]|["L"]) (["y"]|["Y"])	>
	|
	<	#Pivot: (["p"]|["P"]) (["i"]|["I"]) (["v"]|["V"]) (["o"]|["O"]) (["t"]|["T"])	>
	|
	<	#Unpivot: (["u"]|["U"]) (["n"]|["N"]) (["p"]|["P"]) (["i"]|["I"]) (["v"]|["V"]) (["o"]|["O"]) (["t"]|["T"])>
}

TOKEN:{
	<	#TipoFrom:
	<Inner>
	|
	<Join>
	|
	<Left>
	|
	<Outer>
	|
	<Right>
	|
	<Full>
	|
	<Cross>
	|
	<Apply>
	|
	<Pivot>
	|
	<Unpivot>	>
}

/* TipoWhere*/
TOKEN:{
	<	#TipoWhere: (["m"]|["M"]) (["a"]|["A"]) (["t"]|["T"]) (["c"]|["C"]) (["h"]|["H"])	>
}

/* TipoCreate*/
TOKEN:{
	<	#BaseDatos: (["d"]|["D"]) (["a"]|["A"]) (["t"]|["T"]) (["a"]|["A"]) (["b"]|["B"]) (["a"]|["A"]) (["s"]|["S"]) (["e"]|["E"])	>
	|
	<	#Procedimiento: (["p"]|["P"]) (["r"]|["R"]) (["o"]|["O"]) (["c"]|["C"]) (["e"]|["E"]) (["d"]|["D"]) (["u"]|["U"]) (["r"]|["R"]) (["e"]|["E"])	>
	|
	<	#Table: (["t"]|["T"]) (["a"]|["A"]) (["b"]|["B"]) (["l"]|["L"]) (["e"]|["E"])	>
	|
	<	#User: (["u"]|["U"]) (["s"]|["S"]) (["e"]|["E"]) (["r"]|["R"])	>
	|
	<	#View: (["v"]|["V"]) (["i"]|["I"]) (["e"]|["E"]) (["w"]|["W"])	>
	|
	<	#Function: (["f"]|["F"]) (["u"]|["U"]) (["n"]|["N"]) (["c"]|["C"]) (["t"]|["T"]) (["i"]|["I"]) (["o"]|["O"]) (["n"]|["N"])	>
	|
	<	#Trigger: (["t"]|["T"]) (["r"]|["R"]) (["i"]|["I"]) (["g"]|["G"]) (["g"]|["G"]) (["e"]|["E"]) (["r"]|["R"])	>
}

TOKEN:{
	<	TipoCreate:
	<BaseDatos>
	|
	<Procedimiento>
	|
	<Table>
	|
	<User>
	|
	<View>
	|
	<Trigger>
	|
	<Function>	>
}

/* Add*/
TOKEN:{
	<	#Add: (["a"]|["A"]) (["d"]|["D"]) (["d"]|["D"])	>
}

/* DentroDe*/
TOKEN:{
	<	DentroDe: (["i"]|["I"]) (["n"]|["N"]) (["t"]|["T"]) (["o"]|["O"])	>
}

/* Valores*/
TOKEN:{
	<	Valores: (["v"]|["V"]) (["a"]|["A"]) (["l"]|["L"]) (["u"]|["U"]) (["e"]|["E"]) (["s"]|["S"])	>
}

/* Ejecutar*/
TOKEN:{
	<	#Ejecutar: (["e"]|["E"]) (["x"]|["X"]) (["e"]|["E"]) (["c"]|["C"])	>
}

/* Declaracion*/
TOKEN:{
	<	#Alter: (["a"]|["A"]) (["l"]|["L"]) (["t"]|["T"]) (["e"]|["E"]) (["r"]|["R"])	>
	|
	<	#Create: (["c"]|["C"]) (["r"]|["R"]) (["e"]|["E"]) (["a"]|["A"]) (["t"]|["T"]) (["e"]|["E"])	>
	|
	<	#Drop: (["d"]|["D"]) (["r"]|["R"]) (["o"]|["O"]) (["p"]|["P"])	>
	|
	<	#Set: (["s"]|["S"]) (["e"]|["E"]) (["t"]|["T"])	>
	|
	<	#Use: (["u"]|["U"]) (["s"]|["S"]) (["e"]|["E"])	>
}

TOKEN:{
	<	Declaracion: 
	<Alter>
	|
	<Create>
	|
	<Drop>
	|
	<Set>
	|
	<Use>	>
}

/* Agregar*/
TOKEN:{
	<	#Agregar: (["a"]|["A"]) (["d"]|["D"]) (["d"]|["D"])	>
}

/* Check*/
TOKEN:{
	<	#Check: (["c"]|["C"]) (["h"]|["H"]) (["e"]|["E"]) (["c"]|["C"]) (["k"]|["K"])	>
}

/*Constraint*/
TOKEN:{
	<	#Constraint: (["c"]|["C"]) (["o"]|["O"]) (["n"]|["N"]) (["s"]|["S"]) (["t"]|["T"]) (["r"]|["R"]) (["a"]|["A"]) (["i"]|["I"]) (["n"]|["N"]) (["t"]|["T"])	>
}

/*Llave*/
TOKEN:{
	<	#Llave: (["k"]|["K"]) (["e"]|["E"]) (["y"]|["Y"])	>
}

/*TipoLlave*/
TOKEN:{
	< #Primaria: (["p"]|["P"]) (["r"]|["R"]) (["i"]|["I"]) (["m"]|["M"]) (["a"]|["A"]) (["r"]|["R"]) (["y"]|["Y"])	>
	|
	< #Foranea: (["f"]|["F"]) (["o"]|["O"]) (["r"]|["R"]) (["a"]|["A"]) (["n"]|["N"]) (["e"]|["E"]) (["a"]|["A"])	>
}

TOKEN:{
	<	#TipoLlave:
	<Primaria>
	|
	<Foranea>	>
}

/*Referencia*/
TOKEN:{
	<	#Referencia: (["r"]|["R"]) (["e"]|["E"]) (["f"]|["F"]) (["e"]|["E"]) (["r"]|["R"]) (["e"]|["E"]) (["n"]|["N"]) (["c"]|["C"]) (["e"]|["E"]) (["s"]|["S"])	>
}

/*Unique*/
TOKEN:{
	<	#Unique: (["u"]|["U"]) (["n"]|["N"]) (["i"]|["I"]) (["q"]|["Q"]) (["u"]|["U"]) (["e"]|["E"])	>
}

/*Insertar*/
TOKEN:{
	<	Insertar: (["i"]|["I"]) (["n"]|["N"]) (["s"]|["S"]) (["e"]|["E"]) (["r"]|["R"]) (["t"]|["T"])	>
}

/*Etiqueta*/
TOKEN:{
	<	#Doctype: (["D"]) (["O"]) (["C"]) (["T"]) (["Y"]) (["P"]) (["E"])	>
	|
	<	#Body:  (["b"]) (["o"]) (["d"]) (["y"])	>
	|
	<	#Br: (["b"]) (["r"])	>
	|
	<	#Button: (["b"]) (["u"]) (["t"]) (["t"]) (["o"]) (["n"])	>
	|
	<	#Center: (["c"]) (["e"]) (["n"]) (["t"]) (["e"]) (["r"])	>
	|
	<	#Col: (["c"]) (["o"]) (["l"])	>
	|
	<	#Footer: (["f"]) (["o"]) (["o"]) (["t"]) (["e"]) (["r"])	>
	|
	<	#Frame: (["f"]) (["r"]) (["a"]) (["m"]) (["e"])	>
	|
	<	#H1: (["h"]) (["1"])	>
	|
	<	#H2: (["h"]) (["2"])	>
	|
	<	#H3: (["h"]) (["3"])	>
	|
	<	#H4: (["h"]) (["4"])	>
	|
	<	#H5: (["h"]) (["5"])	>
	|
	<	#H6: (["h"]) (["6"])	>
	|
	<	#Head: (["h"]) (["e"]) (["a"]) (["d"])	>
	|
	<	#Header: (["h"]) (["e"]) (["a"]) (["d"]) (["e"]) (["r"])	>
	|
	<	#Ht: (["h"]) (["t"])	>
	|
	<	#Html: (["h"]) (["t"]) (["m"]) (["l"])	>
	|
	<	#Img: (["i"]) (["m"]) (["g"])	>
	|
	<	#Input: (["i"]) (["n"]) (["p"]) (["u"]) (["t"])	>
	|
	<	#Label: (["l"]) (["a"]) (["b"]) (["e"]) (["l"])	>
	|
	<	#Meta: (["m"]) (["e"]) (["t"]) (["a"])	>
	|
	<	#Title: (["t"]) (["i"]) (["t"]) (["l"]) (["e"])	>
}

TOKEN:{
	<	#Etiqueta:
	<Doctype>
	|
	<Body>
	|
	<Br>
	|
	<Button>
	|
	<Center>
	|
	<Col>
	|
	<Footer>
	|
	<Frame>
	|
	<H1>
	|
	<H2>
	|
	<H3>
	|
	<H4>
	|
	<H5>
	|
	<H6>
	|
	<Head>
	|
	<Header>
	|
	<Ht>
	|
	<Html>
	|
	<Img>
	|
	<Input>
	|
	<Label>
	|
	<Meta>
	|
	<Title>	>
}

TOKEN:{
	<	Estatico: (["s"]) (["t"]) (["a"]) (["t"]) (["i"]) (["c"])	>
}

TOKEN:{
	<	Main: (["M"]) (["a"]) (["i"]) (["n"])	>
}

TOKEN:{
	<	Args: (["a"]) (["r"]) (["g"]) (["s"])	>
}

TOKEN:{
	<	EventsArgs: (["E"])(["v"])(["e"])(["n"])(["t"]) (["s"]) (["A"]) (["r"]) (["g"]) (["s"])	>
}

TOKEN:{
	<	Object: (["O"]) (["b"]) (["j"]) (["e"]) (["c"]) (["t"])	>
}

TOKEN:{
	<	Sender: (["s"]) (["e"]) (["n"]) (["d"]) (["e"]) (["r"])	>
}

TOKEN:{
	<	TerminarEtiqueta: (["<"]) (["/"])	>
}

TOKEN:{
	<	Herencia: ([":"])	>
}

TOKEN:{
	<	On: (["o"]|["O"]) (["n"]|["N"])	>
}

TOKEN:{
	<	Dbo: (["d"]|["D"]) (["b"]|["B"]) (["o"]|["O"])	>
}

TOKEN:{
	<	Virgulilla: ["~"]	>
}

TOKEN:{
	<	OpLogicoBoolUnitarioAbierto: "¡"	>
}

TOKEN:{
	<	Excepcion: "Exception"	>
}

TOKEN:{
	<	Go: "GO" | "go"	>
}

TOKEN:{
	<	#Letra: ["a"-"z","A"-"Z"]	> 
	|
	<	#Letras: (<Letra>)+	>
	|
	<	NumeroDecimal: <Numeros> <AccesoMiembro> <Numeros>	>
	|
	<	#Numero: ["0"-"9"]	>
	|
	<	Numeros: (<Numero>)+	>
	| 
	<	#IDENTIFICADOR : (["a"-"z","A"-"Z","0"-"9","_"])*	>
	|
	<	SQLBegin: ("BEGIN")|("begin")	>
	|
	<	SQLEnd: ("END")|("end")	>
	|
	<	Login: ("LOGIN") | ("login") >
	|
	<	Caracteres: (<Letra>) ( <Letras> | <IDENTIFICADOR> )	>
}

/* || ========== || [ FINALIZA LEXICO ] || ========== || */

/* || ========== || [ INICIA SINTACTICO ] || ========== || */

void Program() :
{ 
	System.out.println("+==========================================+");
	System.out.println("|     Token      |=====|    Atributo       |");
	System.out.println("+==========================================+");
	boolean flag = true;
	int Tid;
	String Timage;
	List<String> ID = new ArrayList<String>();
}
{
	(
	SentenciaForeach(){}
		|
	SentenciaDoWhile(){}
		|
	SentenciaWhile(){}
		|
	SentenciaFor(){}
		|
	SentenciaIf(){}
		|
	SentenciaLlamadaMetodo(){}
		|
	saSentenciaMetodo(){}
		|
	SentenciaTryCatch(){}
		|
	SentenciaDeclaracion(){}
		|
	SentenciaInsertarEnTabla(){}
		|
	saDeclaracionVariables(){}
		|
	saDeclaracionClase(){}
		|
	saMetodosReservados(){}
		|
	saConstructorClase(){}
		|
	saDestructorClase(){}
		|
	SentenciaSwitch(){}
		|
	SentenciaMathAgregar(){}
		|
	saProgram(){
		System.out.println("  saProgram" + "   \t\t" +  "\t\t     ");
		}
	)* <EOF>{
		System.out.println("+===================================================+");
	}
}

/* || ============================== || [ INICIA COMPLEMENTOS ] || ============================== || */

void Condicion():{}{
	(<Numeros>|<Caracteres>) (<Comparador>) (<Numeros>|<Caracteres>)
}

void MasVariables():{}{
	<Coma> <Caracteres>
}

void Parametro():{}{
	TipoDato() <Caracteres>
}

void InicioMetodo():{}{
	(<TipoAcceso>)? (<Estatico>)? 
}

void InicioDeclaracion():{}{
	<Declaracion> (<TipoCreate>)? (<Dbo> <AccesoMiembro>)? (<Sustitucion>)? <Caracteres> ( <Asignar> saValores() )?
}

void Palabras():{}{
	<Caracteres> (<Caracteres>)*
}

void Texto():{}{
	<Comillas> Palabras() <Comillas>
}

void saValores():{}{
	(Texto() | <Numeros> | <NumeroDecimal>)
}

void EstructuraMetodo():{
}{
	<Caracteres> <ParenIzq> SentenciaDeclaracionParametro() <ParenDer> <LlaveIzq> (<Retorno><Caracteres><PuntoYComa>)? <LlaveDer>
}

void saEstructuraMetodo():{
}{
	<ParenIzq> SentenciaDeclaracionParametro() <ParenDer> <Caracteres> 
		BloqueCodigo()
	<OrLogico>
}

void SentenciaDeclaracionParametro():{}{
	Parametro() ( <Coma> Parametro() )*
}

void ParametroSQL():{}{
	(<Sustitucion> <Caracteres> TipoDato())|<Numeros>
}

void DeclaracionParametroSQL():{}{
	ParametroSQL() ( <Coma> ParametroSQL() )*
}

void TipoDatoNumerico():{}{
	ParametroSQL() ( <Coma> ParametroSQL() )*
}

void TipoDato():{}{
	(<TipoDatoNoNumerico> | <TipoDatoNumerico>)
}

void BloqueCodigo():{
}{
	(
	(SentenciaForeach())|
	(SentenciaDoWhile())|
	(SentenciaWhile())|
	(SentenciaFor())|
	(SentenciaSwitch())|
	(SentenciaIf())|
	(SentenciaLlamadaMetodo())|
	(SentenciaTryCatch())|
	(SentenciaDeclaracion())|
	(SentenciaMathAgregar())|
	(SentenciaInsertarEnTabla())|
	(saDeclaracionVariables())|
	(saMetodosReservados())
	)*
}

void saBloqueClase():{}{
	(
		(saSentenciaMetodo())*
	)
}

void saAtributosClase():{}{
	<ParenIzq> 
		saDeclaracionVariables() 
	<ParenDer>
}

void saLlamadaMetodo():{}{
	<OrLogico> (<Caracteres> (MasVariables())*)?
}

void saInicioMetodoRes():{}{
	<FuncionString> <AccesoMiembro>
}

void BloqueCase():{}{
	<Case> ((<Numeros>)|(Texto())) <Herencia>
		BloqueCodigo()
	<Romper><PuntoYComa>
}

void BloqueDefaul():{}{
	<Default> <Herencia>
		BloqueCodigo()
	<Romper><PuntoYComa>
}

/* || ============================== || [ FINALIZA COMPLEMENTOS ] || ============================== || */

/* SentenciaForeach [Estructura #1] */
void SentenciaForeach():{}{
	<Foreach> <ParenIzq> TipoDato() <Caracteres> <In> <Caracteres> <ParenDer> <LlaveIzq> BloqueCodigo() <LlaveDer>
}

/* SentenciaDoWhile [Estructura #2] */
void SentenciaDoWhile():{}{
	<Do> <LlaveIzq> BloqueCodigo() <LlaveDer> <While> <ParenIzq> Condicion() <ParenDer> <PuntoYComa>
}

/* SentenciaWhile [Estructura #3] */
void SentenciaWhile():{}{
	<While> <ParenIzq> Condicion() <ParenDer> <LlaveIzq> BloqueCodigo() <LlaveDer>
}


/* SentenciaFor [Estructura #4] */
void SentenciaFor():{}{
	<For> <ParenIzq> <TipoDatoNumerico> <Caracteres> <Asignar> <Numeros> <PuntoYComa> <Caracteres> <Comparador> <Numeros> <PuntoYComa> <Caracteres> <OpAritmeticoUnitario> <ParenDer> 
		<LlaveIzq> 
			BloqueCodigo()
		<LlaveDer>
}
/* SentenciaIf [Estructura #5] */
void SentenciaIf():{}{
	<Pregunta> <ParenIzq> Condicion() <ParenDer> <LlaveIzq> BloqueCodigo() <LlaveDer>
}

/* SentenciaLlamadaMetodo [Estructura inventada #1] */
void SentenciaLlamadaMetodo():{}{
	<Caracteres> saLlamadaMetodo()
}

/* saMetodoProcedimiento   [Estructura inventada #2] */
/* saMetodoFuncion   [Estructura inventada #3] */
void saSentenciaMetodo():{}{
	InicioMetodo() 
	( 	
		(
			saEstructuraMetodo()  
			| 
			(
				TipoDato() saEstructuraMetodo() <Caracteres>
			)
		)
	)
}

/* SentenciaTryCatch  [Estructura #6] */
void SentenciaTryCatch():{}{
	<Intenta> 
		<LlaveIzq> BloqueCodigo() 
	<LlaveDer> 
	<CapExcepcion> <ParenIzq> <Excepcion> <Caracteres> <ParenDer>
	<LlaveIzq> 
		BloqueCodigo() 
	<LlaveDer>
}


/* SQLCreateTable 		[Estructura #7] */
/* SQLCreateDataBase 	[Estructura #8] */
/* SQLUse 				[Estructura #9] */
/* SQLInsertInto 		[Estructura #10] */
/* SQLDropTable 		[Estructura #11] */
/* SQLCreateFunction	[Estructura #12] */
/* SQLCreateView		[Estructura #13] */
/* SQLAlterTable		[Estructura #14] */
/* SQLSet				[Estructura #15] */
/* SQLCreateProcedure	[Estructura #16] */
/* SQLCreateUser		[Estructura #17] */
/* SQLCreateTrigger		[Estructura #18] */
void SentenciaDeclaracion ():{}{
		InicioDeclaracion()
		( 
			<ParenIzq> ( DeclaracionParametroSQL() )? <ParenDer> 
		)?
		(
			(
				<Retorno> TipoDato()
				<As> 
				<SQLBegin> 
				<Retorno> <Sustitucion> <Caracteres>
				<SQLEnd>
			)
			|
			(
			<As> 
				(	
					( 
						<Select> <Multiplicacion> <From> <Caracteres> 
					)
					|
					(
						<SQLBegin> 
							BloqueCodigo()
						<SQLEnd>
					)
					|
					(
						BloqueCodigo()
					)
				)
			(<Go>)?
			)
			|
			(	
				<For> <Login> <Caracteres>
			)
		)?
	( <PuntoYComa> )?
}

/* SentenciaInsertarEnTabla   [Estructura #19] */
void SentenciaInsertarEnTabla():{}{
	<Insertar> <DentroDe> <Caracteres> <Valores> <ParenIzq> ( saValores() ) (<Coma> saValores() )* <ParenDer> ( <PuntoYComa> )?
}

/* SentenciaSwitch   [Estructura #20] */
void SentenciaSwitch():{}{
	<SelectivaMultiple><ParenIzq> <Caracteres> <ParenDer>
	<LlaveIzq>
		(BloqueCase())*
		(BloqueDefaul())?
	<LlaveDer>
}

/* SentenciasMath   	[Estructura #21] */
/* SentenciasAgregar	[Estructura #22] */
void SentenciaMathAgregar():{}{
	<Select> 
	(
		(
			<FuncionAgregar>
		)
		|
		(
			<FuncionMath>
		)
	)
	(
		<ParenIzq> 
		(
			(
				<Caracteres>
			)
			|
			(
				Texto()
			)
			|
			(
				(
					(<Numeros>)
					|
					(<NumeroDecimal>)
				)
			)
		)?
	<ParenDer>) (<PuntoYComa>)?
}


/* || ========== || [ INICIAN INVENTADAS  ] || ========== || */


/* saBloqueClass    [Estructura inventada #4] */
void saBloqueClass():{}{
	(saConstructorClase())?
		(saBloqueClase())
	(saDestructorClase())?
}

/* saDeclaracionVariables   [Estructura inventada #5] */
void saDeclaracionVariables():{
}{
	( <CorIzq> TipoDato() ( <Coma> TipoDato() )* <CorDer> 
	( <AccesoMiembro> <ParenIzq> saValores() (<Coma> saValores())* <ParenDer> )? 
	<ParenIzq> <Caracteres> ( <Coma> <Caracteres> )* <ParenDer> ) ( <Virgulilla> <CorIzq> (<Numeros> | <NumeroDecimal> ) <CorDer> )?

}


/* saMetodosReservados    [Estructura inventada #6] */
void saMetodosReservados():{
}{
	saInicioMetodoRes() (saInicioMetodoRes())* <Caracteres> ( <Virgulilla> <Caracteres> )?
}

/* saConstructorClase    [Estructura inventada #7] */
void saConstructorClase():{}{
	<Virgulilla> <ParenIzq> <ParenDer> <Caracteres> BloqueCodigo() <OrLogico>
}

/* saDestructorClase    [Estructura inventada #8] */
void saDestructorClase():{}{
	<OpLogicoBoolUnitario> (saConstructorClase())
}

/* saDeclaracionClase   [Estructura inventada #9] */
void saDeclaracionClase():{}{
	<Clase> (<TipoAcceso>)? 
		saAtributosClase()
	<ParenIzq> 
		SentenciaDeclaracionParametro() 
	<ParenDer>
		saBloqueClass()
	<OrLogico> <Caracteres>
}

/* saProgram   [Estructura inventada #10] */
void saProgram():{
	System.out.println("Programa creado satisfactoriamente");
}{
	<MenorQue>
		BloqueCodigo()
	<MayorQue>
	(
		<Include> <ParenIzq> <Caracteres> <ParenDer> <PuntoYComa>
	)*
	(saSentenciaMetodo())*
	(saDeclaracionClase())*
}

/* || ========== || [ FINALIZA SINTACTICO ] || ========== || */